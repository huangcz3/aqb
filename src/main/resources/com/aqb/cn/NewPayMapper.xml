<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aqb.cn.mapper.NewPayMapper" >
  <resultMap id="BaseResultMap" type="com.aqb.cn.bean.NewPay" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="user_id" property="userId" jdbcType="CHAR" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="pay_money" property="payMoney" jdbcType="REAL" />
    <result column="pay_name" property="payName" jdbcType="VARCHAR" />
    <result column="pay_number" property="payNumber" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="found_date" property="foundDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, pay_type, pay_money, pay_name, pay_number, status, found_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from new_pay
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from new_pay
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.aqb.cn.bean.NewPay" >
    insert into new_pay (id, user_id, pay_type,
    pay_money, pay_name, pay_number,
    status, found_date)
    values (#{id,jdbcType=CHAR}, #{userId,jdbcType=CHAR}, #{payType,jdbcType=INTEGER},
    #{payMoney,jdbcType=REAL}, #{payName,jdbcType=VARCHAR}, #{payNumber,jdbcType=VARCHAR},
    #{status,jdbcType=INTEGER}, #{foundDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.aqb.cn.bean.NewPay" >
    insert into new_pay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payMoney != null" >
        pay_money,
      </if>
      <if test="payName != null" >
        pay_name,
      </if>
      <if test="payNumber != null" >
        pay_number,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="foundDate != null" >
        found_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payMoney != null" >
        #{payMoney,jdbcType=REAL},
      </if>
      <if test="payName != null" >
        #{payName,jdbcType=VARCHAR},
      </if>
      <if test="payNumber != null" >
        #{payNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="foundDate != null" >
        #{foundDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aqb.cn.bean.NewPay" >
    update new_pay
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payMoney != null" >
        pay_money = #{payMoney,jdbcType=REAL},
      </if>
      <if test="payName != null" >
        pay_name = #{payName,jdbcType=VARCHAR},
      </if>
      <if test="payNumber != null" >
        pay_number = #{payNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="foundDate != null" >
        found_date = #{foundDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aqb.cn.bean.NewPay" >
    update new_pay
    set user_id = #{userId,jdbcType=CHAR},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_money = #{payMoney,jdbcType=REAL},
      pay_name = #{payName,jdbcType=VARCHAR},
      pay_number = #{payNumber,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      found_date = #{foundDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>

  <select id="queryNewPayStatus" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM new_pay WHERE user_id = #{userId} AND status = 1
  </select>


  <!-- 分页查询 -->
  <select id="queryNewPay" parameterType="com.aqb.cn.common.QueryBase" resultMap="BaseResultMap">
    SELECT *
    FROM new_pay
    <include refid="where_with_condition" />
    ORDER BY found_date  DESC
    LIMIT #{firstRow}, #{maxRow}
  </select>

  <select id="countNewPay" parameterType="com.aqb.cn.common.QueryBase" resultType="long">
    SELECT COUNT(id) FROM new_pay
    <include refid="where_with_condition" />
  </select>

  <sql id="where_with_condition">
    <trim prefix="WHERE" prefixOverrides="AND">
      <if test="parameters.userId != null and parameters.userId != '' ">AND user_id = #{parameters.userId}
      </if>
    </trim>
  </sql>

  <update id="updateByStatus" parameterType="java.lang.String" >
    update new_pay
    set status = 2
    where user_id = #{userId} and status = 1
  </update>


</mapper>